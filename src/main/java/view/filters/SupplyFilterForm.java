package view.filters;

import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import connection.Queries;
import view.FrameLocation;
import view.tables.TableViewForm;

import javax.swing.*;
import java.awt.*;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Objects;

public class SupplyFilterForm extends JFrame {
    private JPanel mainPanel;
    private JLabel supplierLabel;
    private JLabel supplyDateLabel;
    private JComboBox<String> supplierBox;
    private JButton acceptButton;
    private JRadioButton dateButton;
    private JFormattedTextField fromSupplyDateText;
    private JFormattedTextField toSupplyDateText;
    private JLabel fromDate;
    private JLabel feedLabel;
    private JComboBox<String> feedBox;
    private JLabel priceLabel;
    private JLabel fromPriceLabel;
    private JLabel toPriceLabel;
    private JTextField fromPriceText;
    private JTextField toPriceText;
    private final TableViewForm tableView;

    public SupplyFilterForm(TableViewForm tableView) {
        this.tableView = tableView;
        $$$setupUI$$$();
        this.setTitle("Фильтрация поставок");
        this.setContentPane(mainPanel);
        this.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        initComboBox();
        initButtons();
        this.pack();
        FrameLocation.centerFrameLocation(this);
    }

    private void initComboBox() {
        DefaultComboBoxModel<String> defaultComboBoxModel = new DefaultComboBoxModel<>();
        defaultComboBoxModel.addElement("Все");
        for (String card : Queries.getSupplierNames()) {
            defaultComboBoxModel.addElement(card);
        }
        supplierBox.setModel(defaultComboBoxModel);

        defaultComboBoxModel = new DefaultComboBoxModel<>();
        defaultComboBoxModel.addElement("Все");
        for (String card : Queries.getFeedNames()) {
            defaultComboBoxModel.addElement(card);
        }
        feedBox.setModel(defaultComboBoxModel);
    }

    private void initButtons() {
        acceptButton.addActionListener(e -> acceptFilter());
    }

    private void acceptFilter() {
        String whereClause = " where 1=1 ";
        if (!"Все".equalsIgnoreCase(Objects.requireNonNull(supplierBox.getSelectedItem()).toString())) {
            whereClause += " and feed_supplier_name = '"
                    + Objects.requireNonNull(supplierBox.getSelectedItem()).toString() + "'";
        }

        if (!dateButton.isSelected()) {
            whereClause += " and supply_date between to_date('" + fromSupplyDateText.getText() + "', 'YYYY-MM-DD')"
                    + " and to_date('" + toSupplyDateText.getText() + "', 'YYYY-MM-DD')";
        }
        if (!"Все".equalsIgnoreCase(Objects.requireNonNull(feedBox.getSelectedItem()).toString())) {
            whereClause += " and feed_name = '" + Objects.requireNonNull(feedBox.getSelectedItem()) + "'";
        }
        if (!fromPriceText.getText().isEmpty()) {
            whereClause += " and price >= " + fromPriceText.getText();
        }
        if (!toPriceText.getText().isEmpty()) {
            whereClause += " and price <= " + toPriceText.getText();
        }
        tableView.filterTable(whereClause);
    }


    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        createUIComponents();
        mainPanel = new JPanel();
        mainPanel.setLayout(new GridLayoutManager(6, 2, new Insets(0, 0, 0, 0), -1, -1));
        supplierLabel = new JLabel();
        supplierLabel.setText("Поставщик");
        mainPanel.add(supplierLabel, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        supplyDateLabel = new JLabel();
        supplyDateLabel.setText("Дата поставок");
        mainPanel.add(supplyDateLabel, new GridConstraints(2, 0, 2, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        supplierBox = new JComboBox();
        final DefaultComboBoxModel defaultComboBoxModel1 = new DefaultComboBoxModel();
        supplierBox.setModel(defaultComboBoxModel1);
        mainPanel.add(supplierBox, new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        acceptButton = new JButton();
        acceptButton.setText("Применить фильтр");
        mainPanel.add(acceptButton, new GridConstraints(5, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        dateButton = new JRadioButton();
        dateButton.setSelected(true);
        dateButton.setText("Любая дата");
        mainPanel.add(dateButton, new GridConstraints(3, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JPanel panel1 = new JPanel();
        panel1.setLayout(new GridLayoutManager(2, 2, new Insets(0, 0, 0, 0), -1, -1));
        mainPanel.add(panel1, new GridConstraints(2, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        panel1.add(fromSupplyDateText, new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        panel1.add(toSupplyDateText, new GridConstraints(1, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        fromDate = new JLabel();
        fromDate.setText("С:");
        panel1.add(fromDate, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JLabel label1 = new JLabel();
        label1.setText("До:");
        panel1.add(label1, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        feedLabel = new JLabel();
        feedLabel.setText("Корм");
        mainPanel.add(feedLabel, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        feedBox = new JComboBox();
        mainPanel.add(feedBox, new GridConstraints(1, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        priceLabel = new JLabel();
        priceLabel.setText("Цена");
        mainPanel.add(priceLabel, new GridConstraints(4, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JPanel panel2 = new JPanel();
        panel2.setLayout(new GridLayoutManager(1, 4, new Insets(0, 0, 0, 0), -1, -1));
        mainPanel.add(panel2, new GridConstraints(4, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        fromPriceText = new JTextField();
        panel2.add(fromPriceText, new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        toPriceText = new JTextField();
        panel2.add(toPriceText, new GridConstraints(0, 3, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        fromPriceLabel = new JLabel();
        fromPriceLabel.setText("От:");
        panel2.add(fromPriceLabel, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        toPriceLabel = new JLabel();
        toPriceLabel.setText("До:");
        panel2.add(toPriceLabel, new GridConstraints(0, 2, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return mainPanel;
    }

    private void createUIComponents() {
        fromSupplyDateText = new JFormattedTextField(new SimpleDateFormat("yyyy-MM-dd"));
        fromSupplyDateText.setValue(new Date(0));

        toSupplyDateText = new JFormattedTextField(new SimpleDateFormat("yyyy-MM-dd"));
        toSupplyDateText.setValue(new Date());
    }
}
