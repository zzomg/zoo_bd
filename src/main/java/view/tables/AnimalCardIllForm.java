package view.tables;

import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import connection.DBConnection;
import connection.Queries;
import entities.AnimalIll;
import entities.Entity;
import view.MainForm;

import javax.swing.*;
import java.awt.*;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Objects;

public class AnimalCardIllForm extends JPanel implements NewEntityPanel {
    private JComboBox<String> animalBox;
    private JFormattedTextField dateStartText;
    private JLabel cardLabel;
    private JLabel illnessLabel;
    private JLabel treatmentLabel;
    private JLabel dateStartLabel;
    private JButton saveButton;
    private JPanel mainPanel;
    private JTextField illnessText;
    private JTextPane treatmentText;

    public AnimalCardIllForm() {
        $$$setupUI$$$();

        initComboBox();
        initButtons();

        this.add(mainPanel);
        this.setVisible(true);
    }

    private void initButtons() {
        saveButton.addActionListener(e -> {
            try {
                insertEntity();
                DBConnection.getConn().commit();
            } catch (SQLException throwables) {
                try {
                    DBConnection.getConn().rollback();
                } catch (SQLException sqlException) {
                    sqlException.printStackTrace();
                }
                MainForm.displayError(throwables);
                return;
            }
            MainForm.displaySuccess("Запись добавлена!");
        });
    }

    private void initComboBox() {
        DefaultComboBoxModel<String> boxModel = new DefaultComboBoxModel<>();
        for (String card : Queries.getAnimalCards()) {
            boxModel.addElement(card);
        }
        animalBox.setModel(boxModel);
    }


    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        createUIComponents();
        mainPanel = new JPanel();
        mainPanel.setLayout(new GridLayoutManager(5, 2, new Insets(0, 0, 0, 0), -1, -1));
        animalBox = new JComboBox();
        mainPanel.add(animalBox, new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        mainPanel.add(dateStartText, new GridConstraints(3, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        cardLabel = new JLabel();
        cardLabel.setText("Животное");
        mainPanel.add(cardLabel, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        illnessLabel = new JLabel();
        illnessLabel.setText("Болезнь");
        mainPanel.add(illnessLabel, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        treatmentLabel = new JLabel();
        treatmentLabel.setText("Лечение");
        mainPanel.add(treatmentLabel, new GridConstraints(2, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        dateStartLabel = new JLabel();
        dateStartLabel.setText("Начало лечения");
        mainPanel.add(dateStartLabel, new GridConstraints(3, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        saveButton = new JButton();
        saveButton.setText("Сохранить");
        mainPanel.add(saveButton, new GridConstraints(4, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        illnessText = new JTextField();
        mainPanel.add(illnessText, new GridConstraints(1, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        treatmentText = new JTextPane();
        mainPanel.add(treatmentText, new GridConstraints(2, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_WANT_GROW, null, new Dimension(150, 50), null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return mainPanel;
    }

    private void createUIComponents() {
        dateStartText = new JFormattedTextField(new SimpleDateFormat("yyyy-MM-dd"));
        dateStartText.setValue(new Date());
    }

    @Override
    public Entity getEntity() throws SQLException {
        String animalCard = Objects.requireNonNull(animalBox.getSelectedItem()).toString();
        String[] splittedCard = animalCard.split("\\s+");

        return new AnimalIll(
                Integer.parseInt(splittedCard[0]),
                illnessText.getText(),
                treatmentText.getText(),
                dateStartText.getText(),
                null
        );
    }

    @Override
    public void insertEntity() throws SQLException {
        getEntity().insertValues();
    }

    @Override
    public void initFilterForm(TableViewForm tableView) {

    }

    @Override
    public JFrame getFilterForm() {
        return null;
    }
}
