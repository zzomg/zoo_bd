package view.tables;

import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import connection.Queries;
import entities.EmployeeAnimal;
import entities.Entity;
import view.FrameLocation;
import view.filters.EmployeeAnimalFilterForm;

import javax.swing.*;
import java.awt.*;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Objects;

public class EmployeeAnimalForm extends JPanel implements NewEntityPanel {
    private JLabel animalNameLabel;
    private JPanel mainPanel;
    private JLabel empLabel;
    private JFormattedTextField dateStartText;
    private JFormattedTextField dateEndText;
    private JLabel dateStartLabel;
    private JLabel dateEndLabel;
    private JComboBox<String> employeeBox;
    private JComboBox<String> animalBox;
    private EmployeeAnimalFilterForm filterForm;

    public EmployeeAnimalForm() {
        $$$setupUI$$$();

        initComboBox();

        this.add(mainPanel);
        this.setVisible(true);
    }

    private void initComboBox() {
        final DefaultComboBoxModel<String> boxModel = new DefaultComboBoxModel<>();
        for (String employee : Queries.getEmployees()) {
            boxModel.addElement(employee);
        }
        employeeBox.setModel(boxModel);


        final DefaultComboBoxModel<String> defaultComboBoxModel = new DefaultComboBoxModel<>();
        for (String name : Queries.getAnimalNames()) {
            defaultComboBoxModel.addElement(name);
        }
        animalBox.setModel(defaultComboBoxModel);
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        createUIComponents();
        mainPanel = new JPanel();
        mainPanel.setLayout(new GridLayoutManager(4, 2, new Insets(0, 0, 0, 0), -1, -1));
        animalNameLabel = new JLabel();
        animalNameLabel.setText("Название животного");
        mainPanel.add(animalNameLabel, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        empLabel = new JLabel();
        empLabel.setText("Сотрудник");
        mainPanel.add(empLabel, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        dateStartLabel = new JLabel();
        dateStartLabel.setText("Дата назначения");
        mainPanel.add(dateStartLabel, new GridConstraints(2, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        dateEndLabel = new JLabel();
        dateEndLabel.setText("Дата окончания");
        mainPanel.add(dateEndLabel, new GridConstraints(3, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        mainPanel.add(dateStartText, new GridConstraints(2, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        mainPanel.add(dateEndText, new GridConstraints(3, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        employeeBox = new JComboBox();
        mainPanel.add(employeeBox, new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        animalBox = new JComboBox();
        mainPanel.add(animalBox, new GridConstraints(1, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return mainPanel;
    }

    @Override
    public Entity getEntity() {
        String employee = Objects.requireNonNull(employeeBox.getSelectedItem()).toString();
        String[] splittedEmployee = employee.split("\\s+");

        return new EmployeeAnimal(
                Integer.parseInt(splittedEmployee[0]),
                splittedEmployee[1],
                splittedEmployee[2],
                Objects.requireNonNull(animalBox.getSelectedItem()).toString(),
                dateStartText.getText(),
                dateEndText.getText()
        );
    }

    @Override
    public void insertEntity() throws SQLException {
        getEntity().insertValues();
    }

    @Override
    public void initFilterForm(TableViewForm tableView) {
        filterForm = new EmployeeAnimalFilterForm(tableView);
    }

    @Override
    public JFrame getFilterForm() {
        return filterForm;
    }

    private void createUIComponents() {
        dateStartText = new JFormattedTextField(new SimpleDateFormat("yyyy-MM-dd"));
        dateStartText.setValue(new Date());

        dateEndText = new JFormattedTextField(new SimpleDateFormat("yyyy-MM-dd"));
        dateEndText.setValue(new Date());
    }
}
