package view.rolepanels;

import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import com.intellij.uiDesigner.core.Spacer;
import view.MainForm;
import view.panel.AnimalFeedForm;
import view.panel.AnimalIllDischargeForm;
import view.panel.AnimalIllForm;
import view.panel.NewEntityForm;
import view.tables.AnimalCardFeedForm;
import view.tables.AnimalCardForm;
import view.tables.AnimalCardIllForm;
import view.tables.TableViewForm;

import javax.swing.*;
import java.awt.*;

public class VetForm extends JPanel {
    private JButton addNewCardButton;
    private JButton showAnimalCardsButton;
    private JPanel mainPanel;
    private JButton feedButton;
    private JButton addFeedButton;
    private JButton showIllAnimalButton;
    private JButton addTreatmentButton;
    private JButton dischargeButton;
    private final MainForm mainForm;

    public VetForm(MainForm mainForm) {
        this.mainForm = mainForm;
        this.add(mainPanel);
        initButtons();
    }

    private void initButtons() {
        addNewCardButton.addActionListener(e -> {
            NewEntityForm newEntityForm = new NewEntityForm(new AnimalCardForm());
            mainForm.addNewTab("Добавление особи", newEntityForm);
        });

        showAnimalCardsButton.addActionListener(e -> {
            TableViewForm tableViewForm = new TableViewForm("Карточки животных");
            mainForm.addNewTab("Карточки животных", tableViewForm);
        });

        feedButton.addActionListener(e -> {
            AnimalFeedForm animalFeedForm = new AnimalFeedForm(mainForm);
            mainForm.addNewTab("Питание животных", animalFeedForm);
        });

        addFeedButton.addActionListener(e -> {
            AnimalCardFeedForm animalCardFeedForm = new AnimalCardFeedForm(0);
            mainForm.addNewTab("Добавить питание", animalCardFeedForm);
        });

        showIllAnimalButton.addActionListener(e -> {
            AnimalIllForm animalIllForm = new AnimalIllForm(mainForm);
            mainForm.addNewTab("Больные животные", animalIllForm);
        });

        addTreatmentButton.addActionListener(e -> {
            AnimalCardIllForm animalCardIllForm = new AnimalCardIllForm();
            mainForm.addNewTab("Назначить лечение", animalCardIllForm);
        });

        dischargeButton.addActionListener(e -> {
            AnimalIllDischargeForm animalIllDischargeForm = new AnimalIllDischargeForm();
            mainForm.addNewTab("Выписать здоровое животное", animalIllDischargeForm);
        });
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        mainPanel = new JPanel();
        mainPanel.setLayout(new GridLayoutManager(8, 1, new Insets(0, 0, 0, 0), -1, -1));
        addNewCardButton = new JButton();
        addNewCardButton.setText("Добавить новую карточку животного");
        mainPanel.add(addNewCardButton, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final Spacer spacer1 = new Spacer();
        mainPanel.add(spacer1, new GridConstraints(7, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_VERTICAL, 1, GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        showAnimalCardsButton = new JButton();
        showAnimalCardsButton.setText("Просмотреть животных");
        mainPanel.add(showAnimalCardsButton, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        feedButton = new JButton();
        feedButton.setText("Просмотреть питание животных");
        mainPanel.add(feedButton, new GridConstraints(2, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        addFeedButton = new JButton();
        addFeedButton.setText("Добавить питание животных");
        mainPanel.add(addFeedButton, new GridConstraints(3, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        showIllAnimalButton = new JButton();
        showIllAnimalButton.setText("Просмотреть больных животных");
        mainPanel.add(showIllAnimalButton, new GridConstraints(4, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        addTreatmentButton = new JButton();
        addTreatmentButton.setText("Назначить лечение");
        mainPanel.add(addTreatmentButton, new GridConstraints(5, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        dischargeButton = new JButton();
        dischargeButton.setText("Просмотреть лечение и выписать здоровое животное");
        mainPanel.add(dischargeButton, new GridConstraints(6, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return mainPanel;
    }

}
