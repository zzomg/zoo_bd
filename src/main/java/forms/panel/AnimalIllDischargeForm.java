package forms.panel;

import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import com.intellij.uiDesigner.core.Spacer;
import server.DBConnection;
import server.Queries;
import forms.MainForm;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ItemEvent;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Objects;

public class AnimalIllDischargeForm extends JPanel {
    private JComboBox<String> animalBox;
    private JFormattedTextField dateEndText;
    private JLabel cardLabel;
    private JLabel dateEndLabel;
    private JButton saveButton;
    private JPanel mainPanel;
    private JTextPane treatmentText;
    private JLabel treatmentLabel;


    public AnimalIllDischargeForm() {
        $$$setupUI$$$();

        initComboBox();
        initButtons();

        this.add(mainPanel);
        this.setVisible(true);
    }

    private void initButtons() {
        saveButton.addActionListener(e -> {
            try {
                updateEntity();
                DBConnection.getConn().commit();
            } catch (SQLException throwables) {
                try {
                    DBConnection.getConn().rollback();
                } catch (SQLException sqlException) {
                    sqlException.printStackTrace();
                }
                MainForm.displayError(throwables);
                return;
            }
            initComboBox();
            MainForm.displaySuccess("Запись добавлена!");
        });
    }

    private void updateEntity() throws SQLException {
        String animalCard = Objects.requireNonNull(animalBox.getSelectedItem()).toString();
        String[] splittedCard = animalCard.split(", ");

        String query = String.format("Update animal_ill " +
                "set DATE_END = to_date('%s', 'yyyy-mm-dd') where CARD_ID = %s " +
                "and ILLNESS = '%s' " +
                "and DATE_END is null", dateEndText.getText(), splittedCard[0], splittedCard[2]);

        DBConnection.getConn().createStatement().execute(query);

        query = String.format("Update ANIMAL_CARD set ill = 0 where CARD_ID = %s", splittedCard[0]);
        DBConnection.getConn().createStatement().execute(query);
    }

    private void initComboBox() {
        DefaultComboBoxModel<String> boxModel = new DefaultComboBoxModel<>();
        for (String card : Queries.getIllAnimals()) {
            boxModel.addElement(card);
        }
        animalBox.setModel(boxModel);

        if (animalBox.getModel().getSize() != 0) {
            String animalCard = Objects.requireNonNull(animalBox.getSelectedItem()).toString();
            String[] splittedCard = animalCard.split(", ");
            String treatment = Queries.getTreatment(splittedCard[0], splittedCard[2]);
            treatmentText.setText(treatment);
        }

        animalBox.addItemListener(e -> {
            if (e.getStateChange() == ItemEvent.SELECTED) {
                String animalCard = Objects.requireNonNull(animalBox.getSelectedItem()).toString();
                String[] splittedCard = animalCard.split(", ");
                String treatment = Queries.getTreatment(splittedCard[0], splittedCard[2]);
                treatmentText.setText(treatment);
            }
        });
    }


    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        createUIComponents();
        mainPanel = new JPanel();
        mainPanel.setLayout(new GridLayoutManager(5, 2, new Insets(0, 0, 0, 0), -1, -1));
        animalBox = new JComboBox();
        mainPanel.add(animalBox, new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        mainPanel.add(dateEndText, new GridConstraints(1, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        cardLabel = new JLabel();
        cardLabel.setText("Животное");
        mainPanel.add(cardLabel, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        dateEndLabel = new JLabel();
        dateEndLabel.setText("Дата выписки");
        mainPanel.add(dateEndLabel, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        saveButton = new JButton();
        saveButton.setText("Сохранить");
        mainPanel.add(saveButton, new GridConstraints(4, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        treatmentLabel = new JLabel();
        treatmentLabel.setText("Лечение");
        mainPanel.add(treatmentLabel, new GridConstraints(2, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final Spacer spacer1 = new Spacer();
        mainPanel.add(spacer1, new GridConstraints(3, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_VERTICAL, 1, GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        final JScrollPane scrollPane1 = new JScrollPane();
        mainPanel.add(scrollPane1, new GridConstraints(2, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        treatmentText = new JTextPane();
        treatmentText.setEditable(false);
        scrollPane1.setViewportView(treatmentText);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return mainPanel;
    }

    private void createUIComponents() {
        dateEndText = new JFormattedTextField(new SimpleDateFormat("yyyy-MM-dd"));
        dateEndText.setValue(new Date());
    }
}
